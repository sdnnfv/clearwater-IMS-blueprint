tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2.1/plugin.yaml
  - diamond.yaml
  - snmp-types.yaml
  - openstack-snmp-types.yaml

plugins:
    dns-plugin:
        executor: host_agent
        source: dns-plugin

relationships:
    dns_client_uses_dns_server:
       derived_from: cloudify.relationships.connected_to
       source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
             preconfigure: dns-plugin.dns_plugin.tasks.configure_resolv_conf

node_types:
    policy_node_type:
       derived_from: cloudify.nodes.SoftwareComponent
       properties:
          nodes_to_monitor:
             default: [] 
       interfaces:
          cloudify.interfaces.lifecycle:
             start:
                implementation: scripts/policy-start.sh
                executor: central_deployment_agent
             stop:
                implementation: scripts/policy-stop.sh
                executor: central_deployment_agent

    vcloud_configuration:
        derived_from: cloudify.nodes.Root
        properties:
            vcloud_config: {}

    
inputs:
    server:
        default:
            template: Ubuntu Server 12.04 LTS (amd64 20150127)
            catalog: Public Catalog
            hardware:
                cpu: { get_input: server_cpu }
                memory: { get_input: server_memory }



node_templates:

    vcloud_configuration:
        type: vcloud_configuration
        properties:
            vcloud_config:
                url: { get_input: vcloud_url }
                instance: { get_input: vcloud_instance }
                vdc: { get_input: vcloud_vdc }
                org: { get_input: vcloud_org }
                service: { get_input: vcloud_service }
                service_type: { get_input: vcloud_service_type }
                api_version: { get_input: vcloud_api_version }

    a_node:
        type: cloudify.nodes.Compute
        properties:
           install_agent: false

    policy_node:
        type: policy_node_type
        relationships:
           - target: bono_vm
             type: cloudify.relationships.depends_on
           - target: sprout_vm
             type: cloudify.relationships.depends_on
           - target: a_node
             type: cloudify.relationships.contained_in
        properties:
           nodes_to_monitor:
              - bono_vm
              - sprout_vm


    cassandra_anti-affinity:
        type: cloudify.openstack.nodes.AffinityGroup
        properties:
           policy: anti-affinity
           group-name: cassandra 

    bono_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
                
        interfaces:          
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config: 
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall

            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}

    ellis_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
        relationships:
            -   type: cloudify.relationships.depends_on
                target: All_ports_open
        
    sprout_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }

        interfaces:
            cloudify.interfaces.monitoring_agent:
               install:
                  implementation: diamond.diamond_agent.tasks.install
                  inputs:
                     diamond_config:
                        interval: 5
               start: diamond.diamond_agent.tasks.start
               stop: diamond.diamond_agent.tasks.stop
               uninstall: diamond.diamond_agent.tasks.uninstall

            cloudify.interfaces.monitoring:
               start:
                  implementation: diamond.diamond_agent.tasks.add_collectors
                  inputs:
                     collectors_config:
                           CPUCollector: {}
    homer_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
        relationships:
            -   type: cloudify.relationships.depends_on
                target: cassandra_anti-affinity
    
    homestead_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
        relationships:
            -   type: cloudify.relationships.depends_on
                target: cassandra_anti-affinity
                
    ralf_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
                
    dns_vm:
        type: cloudify.vcloud.nodes.Server
        properties:
           server: { get_input: server }
                

    bono_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              start:
                 implementation: scripts/bono.sh
                 inputs:
                    public_ip: { get_attribute: [ bono_vm, ip ] }
                    dns_ip: { get_attribute: [ dns_vm, ip ]  }
                    process:
                       command_prefix: "/usr/bin/sudo dns_ip=$dns_ip: public_ip=$public_ip "
        relationships:
            -  type: cloudify.relationships.contained_in
               target: bono_vm
            -  type: dns_client_uses_dns_server
               target: dns_app
               
    ellis_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ellis.sh
                 inputs:
                    public_ip: { get_attribute: [ellis_vm, ip] }
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ellis_vm
            -  type: dns_client_uses_dns_server
               target: dns_app
               
    ralf_app:
        type: cloudify.nodes.SoftwareComponent 
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ralf.sh
                 inputs:
                    dns_ip: { get_attribute: [ dns_vm, ip ] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ralf_vm
            -  type: dns_client_uses_dns_server
               target: dns_app
               
    homestead_app:
        type: cloudify.nodes.SoftwareComponent 
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homestead.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homestead_vm
            -  type: dns_client_uses_dns_server
               target: dns_app
               
    homer_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homer.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homer_vm
            -  type: dns_client_uses_dns_server
               target: dns_app
               
    sprout_app:
        type: cloudify.nodes.SoftwareComponent 
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/sprout.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: sprout_vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    dns_app:
        type: cloudify.nodes.SoftwareComponent 
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns.sh
                 inputs:
                    dns_ip: { get_attribute: [dns_vm, ip] }
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
            -  type: cloudify.relationships.contained_in
               target: dns_vm

    dns_app_config:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns-config.sh
                 inputs:
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
                -  type: cloudify.relationships.contained_in
                   target: dns_vm
                -  type: cloudify.relationships.connected_to
                   target: dns_app
                -  type: cloudify.relationships.connected_to
                   target: bono_app
                -  type: cloudify.relationships.connected_to
                   target: ellis_app
                -  type: cloudify.relationships.connected_to
                   target: ralf_app
                -  type: cloudify.relationships.connected_to
                   target: sprout_app
                -  type: cloudify.relationships.connected_to
                   target: homer_app
                -  type: cloudify.relationships.connected_to
                   target: homestead_app
    
